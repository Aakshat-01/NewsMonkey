// import React, { Component } from "react";
// import NewsItem from "./NewsItem";
// import Spinner from "./Spinner";
// import PropTypes from "prop-types";
// import InfiniteScroll from "react-infinite-scroll-component";

// export default class News extends Component {
//   static defaultProps = {
//     country: "us",
//     pageSize: 8,
//     category: "general",
//   };
//   static PropsTypes = {
//     country: PropTypes.string,
//     pageSize: PropTypes.number,
//     category: PropTypes.string,
//   };
//   capitalizeFirstLetter = (val) => {
//     return String(val).charAt(0).toUpperCase() + String(val).slice(1);
//   };
//   constructor(props) {
//     super(props);
//     this.state = {
//       // articles:this.articles,
//       articles: [],
//       loading: true,
//       page: 1,
//       totalArticles: 0,
//     };
//     document.title = `${this.capitalizeFirstLetter(
//       this.props.category
//     )} - NewsMonkey`;
//   }

//   async updateNews() {
//     this.props.setProgress(10);
//     const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a82ddf41da69442184016f2f9969b3b3&page=${this.state.page}&pageSize=${this.props.pageSize}`;
//     let data = await fetch(url);
//     this.props.setProgress(30);
//     let parsedData = await data.json();
//     this.props.setProgress(70);
//     this.setState({
//       articles: parsedData.articles,
//       totalArticles: parsedData.totalResults,
//       loading: false,
//     });
//     this.props.setProgress(100);
//   }
//   async componentDidMount() {
//     // let url= `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a82ddf41da69442184016f2f9969b3b3&page=1&pageSize=${this.props.pageSize}`;
//     // let data= await fetch(url);
//     // let parsedData= await data.json();
//     // this.setState({articles:parsedData.articles, totalArticles:parsedData.totalResults})
//     this.updateNews();
//   }

//   handlePrevClick = async () => {
//     // console.log("Previous");
//     // let url= `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a82ddf41da69442184016f2f9969b3b3&page=${this.state.page-1}&pageSize=${this.props.pageSize}`;
//     // let data= await fetch(url);
//     // let parsedData= await data.json();
//     // this.setState({
//     //     page: this.state.page-1,
//     //     articles:parsedData.articles
//     // })
//     this.setState({
//       page: this.state.page - 1,
//     });
//     this.updateNews();
//   };
//   handleNextClick = async () => {
//     // console.log("Next");
//     // if(this.state.page+1 > Math.ceil(this.state.totalArticles/this.props.pageSize)){
//     //     return;
//     // } else {
//     //     let url= `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a82ddf41da69442184016f2f9969b3b3&page=${this.state.page+1}&pageSize=${this.props.pageSize}`;
//     //     let data= await fetch(url);
//     //     let parsedData= await data.json();
//     //     this.setState({
//     //         page: this.state.page+1,
//     //         articles:parsedData.articles
//     //     })
//     // }
//     this.setState({
//       page: this.state.page + 1,
//     });
//     this.updateNews();
//   };

//   fetchMoreData = async () => {
//   try {
//     let nextPage = this.state.page + 1;
//     this.props.setProgress(20);

//     const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a82ddf41da69442184016f2f9969b3b3&page=${nextPage}&pageSize=${this.props.pageSize}`;
//     let data = await fetch(url);
//     this.props.setProgress(50);

//     let parsedData = await data.json();
//     this.props.setProgress(80);

//     // If we got fewer articles than pageSize, it means no more data
//     const noMoreData = parsedData.articles.length < this.props.pageSize;

//     this.setState((prevState) => ({
//       articles: prevState.articles.concat(parsedData.articles),
//       page: nextPage,
//       loading: false,
//       hasMore: !noMoreData
//     }));

//     this.props.setProgress(100);
//   } catch (error) {
//     console.error("Error loading more news:", error);
//     this.setState({ loading: false, hasMore: false });
//     this.props.setProgress(100);
//   }
// };
//   render() {
//     return (
//       <>
//         <h1 className="text-center" style={{ margin: "35px 0px" }}>
//           NewsMonkey - Top {this.capitalizeFirstLetter(this.props.category)}{" "}
//           HeadLines
//         </h1>
//         {this.state.loading && <Spinner />}
        // <InfiniteScroll
        //   dataLength={this.state.articles.length}
        //   next={this.fetchMoreData}
        //   hasMore={this.state.hasMore !== false}
        //   loader={<Spinner />}
        // >
        //    <div className="container">
        //      <div className="row">
        //        {this.state.articles.map((element) => {
//                 return (
//                   <div className="col-md-4" key={element.url}>
//                     <NewsItem
//                       title={element.title ? element.title.slice(0, 50) : ""}
//                       description={
//                         element.description
//                           ? element.description.slice(0, 88)
//                           : ""
//                       }
//                       imageUrl={element.urlToImage}
//                       newsUrl={element.url}
//                       author={element.author}
//                       date={element.publishedAt}
//                       source={element.source.name}
//                     />
//                   </div>
//                 );
//               })}
//             </div>
//           </div>
//         </InfiniteScroll>
//         {/* <div className="container d-flex justify-content-between">
//         <button disabled={this.state.page<=1} type="button" className="btn btn-dark" onClick={this.handlePrevClick}>&larr; Previous</button>
//         <button disabled={this.state.page+1 > Math.ceil(this.state.totalArticles/this.props.pageSize)} type="button" className="btn btn-dark" onClick={this.handleNextClick}>Next &rarr;</button>
//         </div> */}
//       </>
//     );
//   }
// }





import React, { Component } from "react";
import NewsItem from "./NewsItem";
import Spinner from "./Spinner";
import PropTypes from "prop-types";
import InfiniteScroll from "react-infinite-scroll-component";

export default class News extends Component {
  static defaultProps = {
    country: "us",
    pageSize: 8,
    category: "general",
  };

  static propTypes = {
    country: PropTypes.string,
    pageSize: PropTypes.number,
    category: PropTypes.string,
  };

  capitalizeFirstLetter = (val) => {
    return String(val).charAt(0).toUpperCase() + String(val).slice(1);
  };

  constructor(props) {
    super(props);
    this.state = {
      articles: [],
      loading: true,
      page: 1,
      totalArticles: 0,
    };
    document.title = `${this.capitalizeFirstLetter(
      this.props.category
    )} - NewsMonkey`;
  }

  async updateNews() {
    try {
      this.props.setProgress(10);
      this.setState({ loading: true });

      const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a82ddf41da69442184016f2f9969b3b3&page=${this.state.page}&pageSize=${this.props.pageSize}`;
      let data = await fetch(url);
      this.props.setProgress(30);

      let parsedData = await data.json();
      this.props.setProgress(70);

      this.setState({
        articles: parsedData.articles,
        totalArticles: parsedData.totalResults,
        loading: false,
      });

      this.props.setProgress(100);
    } catch (error) {
      console.error("Error fetching news:", error);
      this.setState({ loading: false });
      this.props.setProgress(100);
    }
  }

  async componentDidMount() {
    this.updateNews();
  }

  handlePrevClick = async () => {
    this.setState(
      (prevState) => ({ page: prevState.page - 1 }),
      () => this.updateNews()
    );
  };

  handleNextClick = async () => {
    this.setState(
      (prevState) => ({ page: prevState.page + 1 }),
      () => this.updateNews()
    );
  };

  fetchMoreData = async () => {
  try {
    let nextPage = this.state.page + 1;
    this.props.setProgress(20);

    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a82ddf41da69442184016f2f9969b3b3&page=${nextPage}&pageSize=${this.props.pageSize}`;
    let data = await fetch(url);
    this.props.setProgress(50);

    let parsedData = await data.json();
    this.props.setProgress(80);

    // If we got fewer articles than pageSize, it means no more data
    const noMoreData = parsedData.articles.length < this.props.pageSize;

    this.setState((prevState) => ({
      articles: prevState.articles.concat(parsedData.articles),
      page: nextPage,
      loading: false,
      hasMore: !noMoreData
    }));

    this.props.setProgress(100);
  } catch (error) {
    console.error("Error loading more news:", error);
    this.setState({ loading: false, hasMore: false });
    this.props.setProgress(100);
  }
};


  render() {
    return (
      <>
        <h1 className="text-center" style={{ margin: "35px 0px" }}>
          NewsMonkey - Top {this.capitalizeFirstLetter(this.props.category)}{" "}
          Headlines
        </h1>

        {this.state.loading && <Spinner />}

        <InfiniteScroll
          dataLength={this.state.articles.length}
          next={this.fetchMoreData}
          hasMore={this.state.hasMore !== false}
          loader={<Spinner />}
        >
          <div className="container">
            <div className="row">
              {this.state.articles.map((element) => {
                return (
                  <div className="col-md-4" key={element.url}>
                    <NewsItem
                      title={element.title ? element.title.slice(0, 50) : ""}
                      description={
                        element.description
                          ? element.description.slice(0, 88)
                          : ""
                      }
                      imageUrl={element.urlToImage}
                      newsUrl={element.url}
                      author={element.author}
                      date={element.publishedAt}
                      source={element.source.name}
                    />
                  </div>
                );
              })}
            </div>
          </div>
        </InfiniteScroll>
      </>
    );
  }
}


&page=${this.state.page}&pageSize=${this.props.pageSize}
